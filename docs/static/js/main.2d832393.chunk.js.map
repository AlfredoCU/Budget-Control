{"version":3,"sources":["reportWebVitals.js","components/Notification.js","hooks/useForm.js","components/StepFormBudget.js","components/Residuary.js","components/FormExpense.js","components/ItemExpense.js","components/ListExpenses.js","components/StepExpenses.js","assets/icons/IconDollar.js","assets/icons/IconRegisterDollar.js","components/Steps.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Notification","title","message","className","NotificationMemo","memo","useForm","quantityInputs","useState","inputs","setInputs","reset","handleInputChange","target","name","value","StepFormBudget","handleStepChange","handleBudgetChange","budget","error","setError","onSubmit","ev","preventDefault","trim","isNaN","budgetNum","parseFloat","htmlFor","id","required","step","type","autoComplete","onChange","placeholder","Residuary","residuary","color","defaultProps","budge","ResiduaryMemo","FormExpense","createExpense","subtract","expense","notification","setNotification","expenseNum","data","Date","getTime","FormExpenseMemo","ItemExpense","ItemExpenseMemo","ListExpenses","expenses","map","item","ListExpensesMemo","StepExpenses","setExpenses","setResiduary","useCallback","sub","res","StepExpensesMemo","IconDollar","props","xmlns","viewBox","width","height","d","IconDollarMemo","IconRegisterDollar","IconRegisterDollarMemo","Steps","activeLine","activeStep","iconColor","fill","StepMemo","App","setStep","setBudget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d832393.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { memo } from \"react\";\nimport { string } from \"prop-types\";\n\nconst Notification = ({ title, message }) => {\n  return (\n    <div className=\"notification\">\n      <p className=\"notification__title\">{title}</p>\n      <p className=\"notification__message\">{message}</p>\n    </div>\n  );\n};\n\nconst NotificationMemo = memo(Notification);\nexport { NotificationMemo as Notification };\n\nNotification.propTypes = {\n  title: string.isRequired,\n  message: string.isRequired\n};\n","import { useState } from \"react\";\n\nexport const useForm = (quantityInputs = {}) => {\n  const [inputs, setInputs] = useState(quantityInputs);\n\n  const reset = () => {\n    setInputs(quantityInputs);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setInputs({ ...inputs, [target.name]: target.value });\n    // setInputs(inputs => ({ ...inputs, [target.name]: target.value }));\n  };\n\n  return [inputs, handleInputChange, reset];\n};\n","import { useState } from \"react\";\nimport { func } from \"prop-types\";\nimport { Notification } from \"./Notification\";\nimport { useForm } from \"../hooks/useForm\";\n\nexport const StepFormBudget = ({ handleStepChange, handleBudgetChange }) => {\n  const [inputs, handleInputChange, reset] = useForm({ budget: \"\" });\n  const { budget } = inputs;\n\n  const [error, setError] = useState(false);\n\n  const submit = ev => {\n    ev.preventDefault();\n\n    if (budget.trim() === \"\" || budget < 1 || isNaN(budget)) {\n      setError(true);\n      return;\n    }\n\n    const budgetNum = parseFloat(budget);\n\n    handleBudgetChange(budgetNum);\n    handleStepChange();\n    setError(false);\n    reset();\n  };\n\n  return (\n    <>\n      {error && (\n        <Notification\n          title=\"Presupuesto\"\n          message=\"El valor es incorrecto, debe de ser un nÃºmero positivo\"\n        />\n      )}\n      <form onSubmit={submit} className=\"form\">\n        <h1>Ingresa tu presupuesto</h1>\n        <label htmlFor=\"budget\" id=\"label-budget\">\n          Presupuesto:\n        </label>\n        <input\n          required\n          step=\"0.01\"\n          id=\"budget\"\n          type=\"number\"\n          name=\"budget\"\n          value={budget}\n          autoComplete=\"off\"\n          onChange={handleInputChange}\n          placeholder=\"Escribe tu presupuesto...\"\n        />\n        <button type=\"submit\">Definir presupuesto</button>\n      </form>\n    </>\n  );\n};\n\nStepFormBudget.propTypes = {\n  handleStepChange: func.isRequired,\n  handleBudgetChange: func.isRequired\n};\n","import { memo } from \"react\";\nimport { number } from \"prop-types\";\n\nconst Residuary = ({ budget, residuary }) => {\n  const color =\n    budget / 4 > residuary\n      ? \"alert\"\n      : budget / 2 > residuary\n      ? \"warning\"\n      : \"good\";\n\n  return (\n    <div className=\"residuary\">\n      <p>Presupuesto: $ {budget}</p>\n      <p className={color}>Restante: $ {residuary}</p>\n    </div>\n  );\n};\n\nResiduary.propTypes = {\n  budge: number,\n  residuary: number\n};\n\nResiduary.defaultProps = {\n  budge: 0,\n  residuary: 0\n};\n\nconst ResiduaryMemo = memo(Residuary);\nexport { ResiduaryMemo as Residuary };\n","import { useState, memo } from \"react\";\nimport { number, func } from \"prop-types\";\nimport { useForm } from \"../hooks/useForm\";\nimport { Notification } from \"./Notification\";\n\nconst FormExpense = ({ residuary, createExpense, subtract }) => {\n  const [inputs, handleInputChange, reset] = useForm({ name: \"\", expense: \"\" });\n  const { name, expense } = inputs;\n\n  const [error, setError] = useState(false);\n\n  const [notification, setNotification] = useState({\n    title: \"\",\n    message: \"\"\n  });\n  const { title, message } = notification;\n\n  const submit = ev => {\n    ev.preventDefault();\n\n    if (name.trim() === \"\") {\n      setNotification({\n        title: \"Nombre del gasto\",\n        message: \"El campo estÃ¡ vacÃ­o, es necesario llenarlo.\"\n      });\n      setError(true);\n      return;\n    }\n\n    if (expense.trim() === \"\") {\n      setNotification({\n        title: \"Costo del gasto\",\n        message: \"El campo estÃ¡ vacÃ­o, es necesario llenarlo.\"\n      });\n      setError(true);\n      return;\n    }\n\n    if (expense < 1) {\n      setNotification({\n        title: \"El nÃºmero es cero o negativo\",\n        message: \"El valor es incorrecto, debe de ser un nÃºmero positivo\"\n      });\n      setError(true);\n      return;\n    }\n\n    if (isNaN(expense)) {\n      setNotification({\n        title: \"No es un nÃºmero\",\n        message: \"El valor es incorrecto, debe de ser un nÃºmero\"\n      });\n      setError(true);\n      return;\n    }\n\n    if (expense > residuary) {\n      setNotification({\n        title: \"El costo supera el presupuesto\",\n        message: \"El costo es mayor de su restante actual\"\n      });\n      setError(true);\n      return;\n    }\n\n    const expenseNum = parseFloat(expense);\n    const data = { id: new Date().getTime(), name: name, expense: expenseNum };\n\n    subtract(expenseNum);\n    createExpense(data);\n    setError(false);\n    reset();\n  };\n\n  return (\n    <>\n      {error && <Notification title={title} message={message} />}\n      <form onSubmit={submit} className=\"form-expenses\">\n        <h2>Agrega tus gastos</h2>\n        <label htmlFor=\"name\" id=\"label-name\">\n          Nombre del gasto:\n        </label>\n        <input\n          required\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          autoComplete=\"off\"\n          onChange={handleInputChange}\n          placeholder=\"Ejemplo: Comida\"\n        />\n        <label htmlFor=\"expense\" id=\"label-expense\">\n          Costo del gasto:\n        </label>\n        <input\n          required\n          step=\"0.01\"\n          id=\"expense\"\n          type=\"number\"\n          name=\"expense\"\n          value={expense}\n          autoComplete=\"off\"\n          onChange={handleInputChange}\n          placeholder=\"Ejemplo: 1000\"\n        />\n        <button type=\"submit\" className=\"button\">\n          Agregar gasto\n        </button>\n      </form>\n    </>\n  );\n};\n\nFormExpense.propTypes = {\n  residuary: number.isRequired,\n  createExpense: func.isRequired,\n  subtract: func.isRequired\n};\n\nconst FormExpenseMemo = memo(FormExpense);\nexport { FormExpenseMemo as FormExpense };\n","import { memo } from \"react\";\nimport { number, string } from \"prop-types\";\n\nconst ItemExpense = ({ name, expense }) => {\n  return (\n    <li className=\"item-list\">\n      <p className=\"item-list__expense\">\n        {name} <span className=\"item-list__cost\">$ {expense}</span>\n      </p>\n    </li>\n  );\n};\n\nItemExpense.propTypes = {\n  name: string.isRequired,\n  expense: number.isRequired\n};\n\nconst ItemExpenseMemo = memo(ItemExpense);\nexport { ItemExpenseMemo as ItemExpense };\n","import { memo } from \"react\";\nimport { arrayOf, shape, string, number } from \"prop-types\";\nimport { ItemExpense } from \"./ItemExpense\";\n\nconst ListExpenses = ({ expenses }) => {\n  return (\n    <div>\n      <h2>Listado de gastos</h2>\n      <ul>\n        {expenses &&\n          expenses.map(item => (\n            <ItemExpense\n              key={item.id}\n              name={item.name}\n              expense={item.expense}\n            />\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nListExpenses.propTypes = {\n  expenses: arrayOf(\n    shape({\n      id: number.isRequired,\n      name: string.isRequired,\n      expense: number.isRequired\n    })\n  )\n};\n\nconst ListExpensesMemo = memo(ListExpenses);\nexport { ListExpensesMemo as ListExpenses };\n","import { memo, useState, useCallback } from \"react\";\nimport { number } from \"prop-types\";\nimport { Residuary } from \"./Residuary\";\nimport { FormExpense } from \"./FormExpense\";\nimport { ListExpenses } from \"./ListExpenses\";\n\nconst StepExpenses = ({ budget }) => {\n  const [expenses, setExpenses] = useState([]);\n  const [residuary, setResiduary] = useState(budget);\n\n  const createExpense = useCallback(\n    data => {\n      setExpenses(expense => [...expense, data]);\n    },\n    [setExpenses]\n  );\n\n  const subtract = useCallback(\n    sub => {\n      setResiduary(res => res - sub);\n    },\n    [setResiduary]\n  );\n\n  return (\n    <div className=\"content-expenses\">\n      <FormExpense\n        residuary={residuary}\n        createExpense={createExpense}\n        subtract={subtract}\n      />\n      <div className=\"content-list\">\n        <ListExpenses expenses={expenses} />\n        <Residuary budget={budget} residuary={residuary} />\n      </div>\n    </div>\n  );\n};\n\nconst StepExpensesMemo = memo(StepExpenses);\nexport { StepExpensesMemo as StepExpenses };\n\nStepExpenses.propTypes = {\n  budget: number.isRequired\n};\n","import { memo } from \"react\";\n\nconst IconDollar = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 288 512\"\n    width=\"1.5em\"\n    height=\"1.5em\"\n    {...props}\n  >\n    <path d=\"M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z\" />\n  </svg>\n);\n\nconst IconDollarMemo = memo(IconDollar);\nexport { IconDollarMemo as IconDollar };\n","import { memo } from \"react\";\n\nconst IconRegisterDollar = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 384 512\"\n    width=\"1.5em\"\n    height=\"1.5em\"\n    {...props}\n  >\n    <path d=\"M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM64 72c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8V72zm0 80v-16c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8zm144 263.88V440c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-24.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V232c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v24.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07z\" />\n  </svg>\n);\n\nconst IconRegisterDollarMemo = memo(IconRegisterDollar);\nexport { IconRegisterDollarMemo as IconRegisterDollar };\n","import { memo } from \"react\";\nimport { bool } from \"prop-types\";\nimport { IconDollar, IconRegisterDollar } from \"../assets/icons/index\";\n\nconst Steps = ({ step }) => {\n  const activeLine = step ? \"line\" : \"line line__active\";\n  const activeStep = step ? \"step\" : \"step step__active\";\n  const iconColor = step ? \"#A6AFBD\" : \"#FFFFFF\";\n\n  return (\n    <div className=\"content-step\">\n      <div className=\"step step__active\">\n        <IconDollar fill=\"#ffffff\" />\n      </div>\n      <div className={activeLine}></div>\n      <div className={activeStep}>\n        <IconRegisterDollar fill={iconColor} />\n      </div>\n    </div>\n  );\n};\n\nconst StepMemo = memo(Steps);\nexport { StepMemo as Steps };\n\nSteps.propTypes = {\n  step: bool.isRequired\n};\n","import { useState, useCallback } from \"react\";\nimport { StepFormBudget, StepExpenses, Steps } from \"../components/index\";\n\nexport const App = () => {\n  const [step, setStep] = useState(true);\n  const [budget, setBudget] = useState(0);\n\n  const handleStepChange = useCallback(() => {\n    setStep(false);\n  }, [setStep]);\n\n  const handleBudgetChange = useCallback(\n    budgetNum => {\n      setBudget(budgetNum);\n    },\n    [setBudget]\n  );\n\n  return (\n    <>\n      <div className=\"container\">\n        <Steps step={step} />\n        <div className=\"content-form\">\n          {step ? (\n            <StepFormBudget\n              handleStepChange={handleStepChange}\n              handleBudgetChange={handleBudgetChange}\n            />\n          ) : (\n            <StepExpenses budget={budget} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./containers/App\";\nimport \"./styles/normalize.css\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}